@charset "windows-1251";
/* CSS Document */


body {
font:normal 9pt Arial,sans-serif;
	background-color: #ccd5dd;
}


	 
.nevid{display:none;}
.vidim{display:inline;}


									/* начало блок подсказок  */
#text {margin:50px auto; width:500px}
.hotspot {color:#900; padding-bottom:1px; border-bottom:1px dotted #900; cursor:pointer}

#tt {position:absolute; display:block;} 									/*background:url(img/tt_left.gif)   top left no-repeat;*/
#tttop {display:block; height:5px; margin-left:5px;  overflow:hidden;} 	/*background:url(img/tt_top.gif) top right no-repeat;*/
#ttcont {display:block; padding:2px 12px 3px 7px; margin-left:5px; background:#666; color:#FFF}
#ttbot {display:block; height:5px; margin-left:5px; overflow:hidden;} 	/*background:url(images/tt_bottom.gif) top right no-repeat; */
					/* конец блок подсказок  */
#footer{
	
	width:100%;
	height:70px;
	bottom:0;
	left:0;
	z-index: 5;
	
	
	
}

#footer .footer_inf {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 14px;
	color: #999;
}

.vid{display:none;}

#header {
	z-index: 5;
	height: auto;
	width: 100%;
	top: 1px;
	visibility: visible;
	text-align: center;
}
#header table tr .data_ {
    
	font-family: Arial, Helvetica, sans-serif;
	font-size: 20px;
	font-style: inherit;
	color: #999;
}




  A {
    text-decoration: none; /* Убирает подчеркивание для ссылок */
   } 
   A:hover { 
    text-decoration: underline; /* Добавляем подчеркивание при наведении курсора на ссылку */
    color: red; /* Ссылка красного цвета */
   } 
							/* главная полоса */
.pol{border: 1px solid #999;font-size: 1pt;}
							/* главная полоса */
							
.echo_ac{font-size: 10pt; color: black; font-family: Arial; margin: 1px;}
.tabb{border: 1px solid black;font-size: 10pt; color: black; font-family: Arial;}
.echo{font-size: 8pt; color: black; font-family: Arial; margin: 3px;}
.knop{font-family: Arial, Helvetica, sans-serif; font-size: 10pt; border-style: solid; border-width: 1px; background-color: #FFFFFF;}
.tex {
	font-family: Arial, Helvetica, sans-serif;
	width: 1980px;
	height: auto;
	display:table-cell;
	vertical-align:middle;
	border:0px solid #ccc;
}
.ta{border: 1px solid black;width:200px;height:20px;display:table-cell;font-size: 10pt; color: black; font-family: Arial;}

 .tex  table span{color:red;} /* красный цет звездочки*/
											
											/* блок error-ошибок*/
 .mess{
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 333px; 	/*Смещение слоя вниз */
	left: 570px;   /*Сдвиг слоя влево */
	height: 100px;  /*  высоту */
	width: 240px; /*  ширину */
			
			
			
		
		
	}
	.chat {
	position: fixed;
	right:0;
	left:111;
	z-index: 5;
			
	}
	.infor_for_user {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 205px; 	/*Смещение слоя вниз */
	left: 30px;   /*Сдвиг слоя влево */
	height: 45px;  /*  высоту */
	width: 940px; /*  ширину */
			
	}

										/* блок error-ошибок*/
.inputRed{
border:1px solid #ff4040;
background: #ffcece;
}
.inputGreen{
border:1px solid #83c954;
background: #e8ffce;
}
 
	  
										/* блок регистрации*/
	.reg_container {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 300px;   /*Смещение слоя вниз */
	left: 270px;   /*Сдвиг слоя влево */
	height: 160px; /*  высоту */
	width: 330px; /*  ширину */
	
} 
	.raschet {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 300px;   /*Смещение слоя вниз */
	left: 270px;   /*Сдвиг слоя влево */
	height: 160px; /*  высоту */
	width: 630px; /*  ширину */
	
} 

.ank_container {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 300px;   /*Смещение слоя вниз */
	left: 270px;   /*Сдвиг слоя влево */
	height: 160px; /*  высоту */
	width: 330px; /*  ширину */
	
} 
.menu_container {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 250px;   /*Смещение слоя вниз */
	left: 10px;   /*Сдвиг слоя влево */
	height: 500px; /*  высоту */
	width: 240px; /*  ширину */
	
} 
.podskz {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 300px;   /*Смещение слоя вниз */
	left: 350px;   /*Сдвиг слоя влево */
	height: 160px; /*  высоту */
	width: 630px; /*  ширину */
	
} 
			/* блок регистрации*/
				 .mes{
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	float: left;
	top: 190px; 	/*Смещение слоя вниз */
	left: -15px;   /*Сдвиг слоя влево */
	height: 30px;  /*  высоту */
	width: 380px; /*  ширину */
	}
	
			.error_vhod	{
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	height: 10px; /*  высоту */
	width: auto; /*  ширину */
	background-image: url(//92.241.17.70/alterna/css/top/arrow_error.png);
	background-position_x: -1;
	padding: 6;
	background-position: -10;
	background-size: auto ; /* <величина> — ширина и высота фонового изображения в прямом виде
							<процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.
							contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.
							cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.
							auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.*/
	padding-left: 150px; /*задает левое поле для элемента*/
	color: white;
	text-indent: -135px; /* Устанавливает величину отступа в первой строке параграфа */
	line-height: 10px; /* 	Устанавливает межстрочный интервал. */
	text-transform:none; /* 	none (по умолчанию, отменяет изменение регистра букв) 
								capitalize (первая 	буква каждого слова преобразуется в заглавную), 
								uppercase (все буквы преобразуется в заглавные), 
								lowercase (все буквы преобразуется в строчные).*/
	text-align:left; /* 		Определяет оформление регистра букв текста. Возможные свойства: 
									left (по умолчанию, выравнивание по левому краю), 
									right (выравнивание по правому краю), 
									center (центрирование), 
									justify (выравнивание по ширине колонки). */
	top: 1px;   /*Смещение слоя вниз */
	left: 1x;   /*Сдвиг слоя влево */
	
	} 
									/* блок error логина*/
   .login_mess {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	height: 10px; /*  высоту */
	width: auto; /*  ширину */
	background-image: url(//92.241.17.70/alterna/css/top/arrow_error.png);
	background-position_x: -1;
	padding: 6;
	background-position: 0;
	background-size: auto ; /* <величина> — ширина и высота фонового изображения в прямом виде
							<процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.
							contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.
							cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.
							auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.*/
	padding-left: 150px; /*задает левое поле для элемента*/
	color: #F00;
	text-indent: -135px; /* Устанавливает величину отступа в первой строке параграфа */
	line-height: 10px; /* 	Устанавливает межстрочный интервал. */
	text-transform:none; /* 	none (по умолчанию, отменяет изменение регистра букв) 
								capitalize (первая 	буква каждого слова преобразуется в заглавную), 
								uppercase (все буквы преобразуется в заглавные), 
								lowercase (все буквы преобразуется в строчные).*/
	text-align:left; /* 		Определяет оформление регистра букв текста. Возможные свойства: 
									left (по умолчанию, выравнивание по левому краю), 
									right (выравнивание по правому краю), 
									center (центрирование), 
									justify (выравнивание по ширине колонки). */
	top: 1px;   /*Смещение слоя вниз */
	left: 1x;   /*Сдвиг слоя влево */
	
	} 
										/* блок error логина*/
										
										/* блок error email*/
   .email_mess {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	height: 10px; /*  высоту */
	width: auto; /*  ширину */
	background-image: url(//92.241.17.70/alterna/css/top/arrow_error.png);
	background-position-x: -1;
	
	padding: 6; /*задает все свойства полей в одной строке* 
					padding:10px 5px 15px 20px; - верхнее поле 10px - правое поле 5px - нижнее поле 15px - левое поле 20px
					* padding:10px 5px 15px; - верхнее поле 10px - правое и левое поля 5px - нижнее поле 15px
					* padding:10px 5px; - верхнее и нижнее поля 10px - правое и левое поля 5px
					* padding:10px; - все четыре поля 10px*/
					
	background-position: 0;
	background-size: auto ; /* <величина> — ширина и высота фонового изображения в прямом виде
							<процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.
							contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.
							cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.
							auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.*/
	padding-left: 120px; /*задает левое поле для элемента*/
	color: #F00;
	font-weight:10;
	text-indent: -105px; /* Устанавливает величину отступа в первой строке параграфа */
	line-height: 10px; /* 	Устанавливает межстрочный интервал. */
	text-transform:none; /* 	none (по умолчанию, отменяет изменение регистра букв) 
								capitalize (первая 	буква каждого слова преобразуется в заглавную), 
								uppercase (все буквы преобразуется в заглавные), 
								lowercase (все буквы преобразуется в строчные).*/
	text-align:left; /* 		Определяет оформление регистра букв текста. Возможные свойства: 
									left (по умолчанию, выравнивание по левому краю), 
									right (выравнивание по правому краю), 
									center (центрирование), 
									justify (выравнивание по ширине колонки). */
	top: 24px;   /*Смещение слоя вниз */
	left: 1x;   /*Сдвиг слоя влево */
	
	} 
									/* блок error email*/
	
													/* блок error pass1*/	
.pas1_mess {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	height: 10px;
	width: auto;
	background-image: url(//92.241.17.70/alterna/css/top/arrow_error.png);
	background-position-x: -1;
	padding: 6; 
	background-position: 0;
	background-size: auto; /* <величина> — ширина и высота фонового изображения в прямом виде
							<процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.
							contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.
							cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.
							auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.*/
	padding-left: 120px; /*задает левое поле для элемента*/
	color: #F00;
	font-weight:10;      /* normal	Нормальный шрифт. Значение по умолчанию
							bold	Толстый шрифт
							bolder	Шрифт должен быть толще (более насыщеннее) по отношению к элементу родителю
							lighter	Шрифт должен быть тоньше (менее насыщеннее) по отношению к элементу родителю
							100 200 300 400 500 600 700 800 900	Позволяет задать произвольную толщину. 400 - нормальный шрифт, 700 - толстый.
							inherit	Значение должно быть унаследовано от элемента родителя*/
	text-indent: -105px; /* Устанавливает величину отступа в первой строке параграфа */
	line-height: 10px; /* 	Устанавливает межстрочный интервал. */
	text-transform:none; /* 	none (по умолчанию, отменяет изменение регистра букв) 
								capitalize (первая 	буква каждого слова преобразуется в заглавную), 
								uppercase (все буквы преобразуется в заглавные), 
								lowercase (все буквы преобразуется в строчные).*/
	text-align:left; /* 		Определяет оформление регистра букв текста. Возможные свойства: 
									left (по умолчанию, выравнивание по левому краю), 
									right (выравнивание по правому краю), 
									center (центрирование), 
									justify (выравнивание по ширине колонки). */
	top: 47px;   /*Смещение слоя вниз */
	left: 1x;   /*Сдвиг слоя влево */
	
	} 									
										/* блок error pass1*/
	
									/* блок error pass2*/
	.pas2_mess {
	position: absolute; /*	
							absolute	Указывает,что элемент абсолютно позиционирован. Положение элемента задается атрибутами left, top, right и 	bottom относительно края окна браузера.
							fixed	Похож на absolute, но в отличие от него привязывается к указанной точке на экране и не меняет своего положения даже при пролистывании веб-страницы.
							relative	Положение элемента устанавливается относительно его начального места. Применение атрибутов left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
							static	Элементы отображаются как обычно.
							inherit	Значение должно быть унаследовано от элемента родителя
						*/
	/*left: 410px;  Сдвиг слоя влево */
	/*top: 264px;  Смещение слоя вниз */
	height: 10px;
	width: auto;
	background-image: url(//92.241.17.70/alterna/css/top/arrow_error.png);
	background-position-x: -1;
	padding: 6;
	background-position: 0;
	background-size: auto; /* <величина> — ширина и высота фонового изображения в прямом виде
							<процент> — ширина и высота фонового изображения в процентном отношении от ширины и высоты элемента.
							contain — изображение масштабируется, сохраняя при этом пропорции, по большей стороне так, чтобы и ширина и высота поместились внутри области фонового изображения.
							cover — изображение масштабируется, сохраняя при этом пропорции, по меньшей стороне так, чтобы и ширина и высота полностью покрыли область фонового изображения.
							auto — изображение имеет свой собственный размер (масштаб 100%), а если нет то масштабируется, как будто задано значение contain.*/
	padding-left: 120px;  /*задает левое поле для элемента*/
	color: #F00;
	font-weight:10;      /* normal	Нормальный шрифт. Значение по умолчанию
							bold	Толстый шрифт
							bolder	Шрифт должен быть толще (более насыщеннее) по отношению к элементу родителю
							lighter	Шрифт должен быть тоньше (менее насыщеннее) по отношению к элементу родителю
							100 200 300 400 500 600 700 800 900	Позволяет задать произвольную толщину. 400 - нормальный шрифт, 700 - толстый.
							inherit	Значение должно быть унаследовано от элемента родителя*/
	text-indent: -105px; /* 	Устанавливает величину отступа в первой строке параграфа */
	line-height: 10px; /* 		Устанавливает межстрочный интервал. */
	text-transform:none; /* 	none (по умолчанию, отменяет изменение регистра букв) 
								capitalize (первая 	буква каждого слова преобразуется в заглавную), 
								uppercase (все буквы преобразуется в заглавные), 
								lowercase (все буквы преобразуется в строчные).*/
	text-align:left; /* 		Определяет оформление регистра букв текста. Возможные свойства: 
									left (по умолчанию, выравнивание по левому краю), 
									right (выравнивание по правому краю), 
									center (центрирование), 
									justify (выравнивание по ширине колонки). */
	top: 70px;   /*Смещение слоя вниз */
	left: 1x;   /*Сдвиг слоя влево */
	
	} 
										/* блок error pass2*/
	
